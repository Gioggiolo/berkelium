
CMAKE_MINIMUM_REQUIRED(VERSION 2.4)
SET(CMAKE_VERBOSE_MAKEFILE OFF)
SET(CMAKE_ALLOW_LOOSE_LOOP_CONSTRUCTS TRUE)

IF(COMMAND CMAKE_POLICY)
  # Use new policy for absolute path libraries.  We have no reason to depend on the
  # old version which adds library search paths unnecessarily
  CMAKE_POLICY(SET CMP0003 NEW)
ENDIF(COMMAND CMAKE_POLICY)
SET(BERKELIUM_TOP_LEVEL ${CMAKE_CURRENT_SOURCE_DIR})
SET(CMAKE_MODULE_PATH ${BERKELIUM_TOP_LEVEL}/../../build/modules)
GET_FILENAME_COMPONENT(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ABSOLUTE)
IF(NOT CHROME_ROOT)
  SET(CHROME_ROOT ${BERKELIUM_TOP_LEVEL}/../../dependencies/ch/c)
ENDIF()
FIND_PACKAGE(Chrome)

IF(CHROME_FOUND)

  INCLUDE_DIRECTORIES(${CHROME_INCLUDE_DIRS})
  LINK_DIRECTORIES(${CHROME_LIBRARY_DIRS})
  SET(BERKELIUM_SOURCE_NAMES src/Berkelium src/Context src/ContextImpl src/NavigationController src/RenderWidget src/MemoryRenderViewHost src/Root src/Window src/WindowImpl)


  SET(BERKELIUM_SOURCES)
  FOREACH(BERKELIUM_SOURCE_FILE ${BERKELIUM_SOURCE_NAMES})
    SET(BERKELIUM_SOURCES ${BERKELIUM_SOURCES}   ${BERKELIUM_TOP_LEVEL}/${BERKELIUM_SOURCE_FILE}.cpp)
  ENDFOREACH()

  SET(CHROMIUM_LDFLAGS "")
  FOREACH(CHROME_LDFLAG ${CHROME_LDFLAGS})
    SET(CHROMIUM_LDFLAGS "${CHROMIUM_LDFLAGS} ${CHROME_LDFLAG}")
  ENDFOREACH()
  FOREACH(CHROME_CFLAG ${CHROME_CFLAGS})
    SET(CHROMIUM_CFLAGS "${CHROMIUM_CFLAGS} ${CHROME_CFLAG}")
  ENDFOREACH()

  ADD_LIBRARY(berkelium_stage ${BERKELIUM_SOURCES})
  SET_TARGET_PROPERTIES(berkelium_stage PROPERTIES LINK_FLAGS "${CHROMIUM_LDFLAGS}")
  SET_TARGET_PROPERTIES(berkelium_stage PROPERTIES COMPILE_FLAGS "${CHROMIUM_CFLAGS}")
  SET_TARGET_PROPERTIES(berkelium_stage PROPERTIES DEBUG_POSTFIX "_d")


  ADD_LIBRARY(libberkelium SHARED ${BERKELIUM_TOP_LEVEL}/src/Version.cpp)
  TARGET_LINK_LIBRARIES(libberkelium berkelium_stage)
  SET(BERKELIUM_LDFLAGS "")
  FOREACH(BERKELIUM_SOURCE_FILE ${BERKELIUM_SOURCE_NAMES})
    SET(BERKELIUM_LDFLAGS "${BERKELIUM_LDFLAGS} CMakeFiles/berkelium_stage.dir/${BERKELIUM_SOURCE_FILE}.o")
  ENDFOREACH()
  SET(BERKELIUM_LDFLAGS "${BERKELIUM_LDFLAGS} ${CHROMIUM_LDFLAGS}")


  SET_TARGET_PROPERTIES(libberkelium PROPERTIES LINK_FLAGS "${BERKELIUM_LDFLAGS}")
  SET_TARGET_PROPERTIES(libberkelium PROPERTIES COMPILE_FLAGS "${CHROMIUM_CFLAGS}")
  SET_TARGET_PROPERTIES(libberkelium PROPERTIES DEBUG_POSTFIX "_d")
 
  ADD_EXECUTABLE(ppmrender ${BERKELIUM_TOP_LEVEL}/ppmmain.cpp)
  TARGET_LINK_LIBRARIES(ppmrender libberkelium)

  ADD_EXECUTABLE(berkelium ${BERKELIUM_TOP_LEVEL}/subprocess.cpp)
  TARGET_LINK_LIBRARIES(berkelium libberkelium)


ENDIF(CHROME_FOUND)
